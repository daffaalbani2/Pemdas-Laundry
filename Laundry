import java.util.ArrayList;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

// Kelas utama untuk aplikasi
public class KASIRLAUNDRY extends JFrame {
    private ArrayList<User> users;

    public KASIRLAUNDRY() {
        // Daftar akun pengguna
        users = new ArrayList<>();
        users.add(new User("admin", "admin"));
        users.add(new User("user1", "password1"));
        users.add(new User("user2", "password2"));

        // Konfigurasi JFrame
        setTitle("Laundry In Aja - Login");
        setSize(800, 600);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(null);

        // Panel kiri untuk form login
        JPanel leftPanel = new JPanel();
        leftPanel.setBackground(Color.WHITE);
        leftPanel.setBounds(0, 0, 400, 600);
        leftPanel.setLayout(null);
        add(leftPanel);

        JLabel titleLabel = new JLabel("Laundry In Aja");
        titleLabel.setFont(new Font("Serif", Font.BOLD, 20));
        titleLabel.setForeground(new Color(139, 69, 19));
        titleLabel.setBounds(30, 30, 200, 30);
        leftPanel.add(titleLabel);

        JLabel loginLabel = new JLabel("LOGIN");
        loginLabel.setFont(new Font("Serif", Font.BOLD, 28));
        loginLabel.setForeground(new Color(139, 69, 19));
        loginLabel.setBounds(30, 60, 200, 40);
        leftPanel.add(loginLabel);

        JPanel formPanel = new JPanel();
        formPanel.setBackground(new Color(173, 216, 230));
        formPanel.setBounds(30, 120, 340, 200);
        formPanel.setLayout(null);
        leftPanel.add(formPanel);

        JLabel usernameLabel = new JLabel("Username");
        usernameLabel.setBounds(20, 20, 100, 30);
        usernameLabel.setFont(new Font("Serif", Font.PLAIN, 14));
        formPanel.add(usernameLabel);

        JTextField usernameField = new JTextField();
        usernameField.setBounds(20, 50, 300, 30);
        usernameField.setBorder(BorderFactory.createLineBorder(new Color(139, 69, 19)));
        formPanel.add(usernameField);

        JLabel passwordLabel = new JLabel("Password");
        passwordLabel.setBounds(20, 90, 100, 30);
        passwordLabel.setFont(new Font("Serif", Font.PLAIN, 14));
        formPanel.add(passwordLabel);

        JPasswordField passwordField = new JPasswordField();
        passwordField.setBounds(20, 120, 300, 30);
        passwordField.setBorder(BorderFactory.createLineBorder(new Color(139, 69, 19)));
        formPanel.add(passwordField);

        JButton loginButton = new JButton("Log In");
        loginButton.setBounds(120, 170, 100, 30);
        loginButton.setBackground(new Color(139, 69, 19));
        loginButton.setForeground(Color.WHITE);
        formPanel.add(loginButton);

        // Panel kanan
        JPanel rightPanel = new JPanel();
        rightPanel.setBackground(new Color(173, 216, 230));
        rightPanel.setBounds(400, 0, 400, 600);
        rightPanel.setLayout(null);
        add(rightPanel);

        JLabel imageLabel = new JLabel(new ImageIcon("path/to/image.png"));
        imageLabel.setBounds(50, 150, 300, 300);
        rightPanel.add(imageLabel);

        // Action Listener untuk tombol login
        loginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String username = usernameField.getText();
                String password = new String(passwordField.getPassword());
                boolean loginSuccessful = false;

                // Memeriksa daftar pengguna
                for (User user : users) {
                    if (user.getUsername().equals(username) && user.getPassword().equals(password)) {
                        loginSuccessful = true;
                        break;
                    }
                }

                if (loginSuccessful) {
                    // Buka halaman kasir setelah login berhasil
                    JOptionPane.showMessageDialog(KASIRLAUNDRY.this, "Login Successful!");
                    dispose();
                    new KasirLaundryPage().setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(KASIRLAUNDRY.this, "Invalid Username or Password!");
                }
            }
        });
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            KASIRLAUNDRY loginApp = new KASIRLAUNDRY();
            loginApp.setVisible(true);
        });
    }
}

// Kelas User untuk menyimpan informasi akun
class User {
    private String username;
    private String password;

    public User(String username, String password) {
        this.username = username;
        this.password = password;
    }

    public String getUsername() {
        return username;
    }

    public String getPassword() {
        return password;
    }
}

// Halaman kasir setelah login berhasil
class KasirLaundryPage extends JFrame {
    private JTextField namaField, tanggalField, whatsappField, alamatField;
    private JComboBox<String> beratPakaian, jenisLaundry, jenisLayanan, lipatSetrika;
    private JButton generateInvoiceButton;
    private JTextArea invoiceArea;

    public KasirLaundryPage() {
        // Set window properties
        setTitle("Invoice Laundry");
        setSize(600, 700);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(null);
        getContentPane().setBackground(new Color(173, 216, 230));

        // Title
        JLabel labelTitle = new JLabel("INVOICE LAUNDRY");
        labelTitle.setBounds(200, 10, 300, 30);
        labelTitle.setFont(new Font("Serif", Font.BOLD, 24));
        labelTitle.setForeground(new Color(139, 69, 19));
        add(labelTitle);

        // Input fields
        JLabel namaLabel = new JLabel("Nama:");
        namaLabel.setBounds(50, 80, 100, 20);
        add(namaLabel);

        namaField = new JTextField();
        namaField.setBounds(50, 100, 200, 25);
        add(namaField);

        JLabel tanggalLabel = new JLabel("Tanggal Order:");
        tanggalLabel.setBounds(50, 140, 100, 20);
        add(tanggalLabel);

        tanggalField = new JTextField();
        tanggalField.setBounds(50, 160, 200, 25);
        add(tanggalField);

        JLabel whatsappLabel = new JLabel("No Whatsapp:");
        whatsappLabel.setBounds(50, 200, 100, 20);
        add(whatsappLabel);

        whatsappField = new JTextField();
        whatsappField.setBounds(50, 220, 200, 25);
        add(whatsappField);

        JLabel alamatLabel = new JLabel("Alamat:");
        alamatLabel.setBounds(50, 260, 100, 20);
        add(alamatLabel);

        alamatField = new JTextField();
        alamatField.setBounds(50, 280, 200, 25);
        add(alamatField);

        JLabel layananLabel = new JLabel("Layanan:");
        layananLabel.setBounds(350, 50, 200, 20);
        add(layananLabel);

        // Dropdown options
        String[] beratOptions = {"< 3 Kg", "3-5 Kg", "5-10 Kg", "> 10 Kg"};
        String[] laundryOptions = {"Laundry", "Self Laundry"};
        String[] layananOptions = {"Normal", "Ekspres"};
        String[] lipatOptions = {"Lipat", "Setrika Lipat"};

        beratPakaian = new JComboBox<>(beratOptions);
        beratPakaian.setBounds(350, 80, 200, 25);
        add(beratPakaian);

        jenisLaundry = new JComboBox<>(laundryOptions);
        jenisLaundry.setBounds(350, 140, 200, 25);
        add(jenisLaundry);

        jenisLayanan = new JComboBox<>(layananOptions);
        jenisLayanan.setBounds(350, 200, 200, 25);
        add(jenisLayanan);

        lipatSetrika = new JComboBox<>(lipatOptions);
        lipatSetrika.setBounds(350, 260, 200, 25);
        add(lipatSetrika);

        // Generate Invoice button
        generateInvoiceButton = new JButton("Generate Invoice");
        generateInvoiceButton.setBounds(200, 320, 200, 30);
        add(generateInvoiceButton);

        // Invoice area
        invoiceArea = new JTextArea();
        invoiceArea.setBounds(50, 370, 500, 250);
        invoiceArea.setEditable(false);
        add(invoiceArea);

        // Event listener for button
        generateInvoiceButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                generateInvoice();
            }
        });
    }

    private void generateInvoice() {
        // Retrieve input
        String nama = namaField.getText();
        String tanggal = tanggalField.getText();
        String whatsapp = whatsappField.getText();
        String alamat = alamatField.getText();
        String berat = (String) beratPakaian.getSelectedItem();
        String laundry = (String) jenisLaundry.getSelectedItem();
        String layanan = (String) jenisLayanan.getSelectedItem();
        String lipat = (String) lipatSetrika.getSelectedItem();

        // Generate invoice
        StringBuilder invoice = new StringBuilder();
        invoice.append("=== Invoice Laundry ===\n");
        invoice.append("Nama: ").append(nama).append("\n");
        invoice.append("Tanggal Order: ").append(tanggal).append("\n");
        invoice.append("No Whatsapp: ").append(whatsapp).append("\n");
        invoice.append("Alamat: ").append(alamat).append("\n");
        invoice.append("Berat Pakaian: ").append(berat).append("\n");
        invoice.append("Jenis Laundry: ").append(laundry).append("\n");
        invoice.append("Jenis Layanan: ").append(layanan).append("\n");
        invoice.append("Lipat/Setrika: ").append(lipat).append("\n");

        // Calculate cost
        int cost = 0;
        switch (berat) {
            case "< 3 Kg": cost += 10000; break;
            case "3-5 Kg": cost += 15000; break;
            case "5-10 Kg": cost += 20000; break;
            case "> 10 Kg": cost += 30000; break;
        }

        if ("Ekspres".equals(layanan)) {
            cost += 5000;
        }

        invoice.append("\nTotal Biaya: Rp").append(cost);
        invoiceArea.setText(invoice.toString());
    }
}
